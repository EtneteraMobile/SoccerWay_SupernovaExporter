import SwiftUI

// Generated by Supernova - do not modify manually
// swiftlint:disable all
public extension View {
    {[ let brand = ds.currentBrand() /]}
    {[ for group in ds.tokenGroupsOfType("Typography", brand.id) ]}
    {[ const tokens = ds.tokensByGroupId(group.id) /]}
    {[ if !(tokens.count() === 0 && group.subgroups.count() === 0) ]}
    {[ if !group.isRoot ]}

    // {{ group.name }}
    {[/]}
    {[ for token in tokens ]}

    {[ if (token.description && token.description.count() > 0) ]}
    {{ createDocumentationComment(token.description, "    ") }}
    {[/]}
    func textStyle{[ inject "token_func_name" context this /]}() -> some View {
        self
            .font({[ inject "font" context token.value /]})
            {[ const leterSpacing = token.value.leterSpacing /]}
            {[ if letterSpacing ]}
            .kerning({{ letterSpacing.measure }}) 
            {[/]}
            {[ const textDecoration = token.value.textDecoration /]}
            {[ if (textDecoration == "Underline") ]}
            .underline() 
            {[ elseif (textDecoration == "Strikethrough") ]}
            .strikethrough() 
            {[/]}
            {[ const lineHeight = token.value.lineHeight /]}
            {[ const fontSize = token.value.fontSize /]}
            {[ if (lineHeight && fontSize) ]}
            .lineSpacing({{ lineHeight.measure - fontSize.measure }})
            {[/]}
            {[ const textCase = token.value.textCase /]}
            {[ if (textCase == "Upper") ]}
            .textCase(.uppercase) 
            {[ elseif (textCase == "Lower") ]}
            .textCase(.lowercase) 
            {[/]}
    }
    {[/]}
    {[/]}
    {[/]}
}
// swiftlint:enable all
