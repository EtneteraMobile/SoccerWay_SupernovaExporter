import SwiftUI

// Generated by Supernova - do not modify manually
// swiftlint:disable all
public extension DesignSystem {
    enum Dimension: @unchecked Sendable { // Should be safe

        // Defaults

        case zero

        {[ let brand = ds.currentBrand() /]}
        {[ for group in ds.tokenGroupsOfType("Measure", brand.id) ]}
        {[ const tokens = ds.tokensByGroupId(group.id) /]}
        {[ if !(tokens.count() === 0 && group.subgroups.count() === 0) ]}
        {[ if !group.isRoot ]}

        // {{ group.name }}

        {[/]}
        {[ for token in tokens ]}
        {[ if (token.description && token.description.count() > 0) ]}
        {{ createDocumentationComment(token.description, "        ") }}
        {[/]}
        case {[ inject "token_name" context this /]}

        {[/]}
        {[/]}
        {[/]}

        public var value: CGFloat {
            switch self {
                case .zero:
                    return 0
                {[ for group in ds.tokenGroupsOfType("Measure", brand.id) ]}
                {[ const tokens = ds.tokensByGroupId(group.id) /]}
                {[ for token in tokens ]}
                case .{[ inject "token_name" context this /]}:
                    return {{ token.value.measure }}
                {[/]}
                {[/]}
            }
        }
    }
}
// swiftlint:enable all
